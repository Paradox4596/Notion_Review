k-1270

-----------------------------------------------------------------------------------------------------------------------------------------------------

int main()
{
	int value{ 0 };

	int *pointer;

	pointer = &value;

	std::cout << &value << std::endl; // 000000986431F854
	std::cout << pointer << std::endl; // 000000986431F854

	std::cout << sizeof(value) << std::endl; // 4
	std::cout << sizeof(pointer) << std::endl; // !!!!!!!!!!!주의!!!!!!!!!!! x64에서 컴파일 하면 '8' , x86에서 컴파일 하면 '4'
}

-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------

k-1281

-----------------------------------------------------------------------------------------------------------------------------------------------------

void f(int* x)
{
	std::cout << "정수포인터" << std::endl;
}

void f(int x)
{
	std::cout << "정수" << std::endl;
}

int main()
{
	f(nullptr); // 정수포인터
  f(0); // 정수
}

-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------

k-1287

-----------------------------------------------------------------------------------------------------------------------------------------------------

int main()
{
	int myInteger{ 1 };
	char myCharacter{ 'a' };

	void* p; // void pointer : 어떤 타입이든 가리킬 순 있으나 역참조, 연산이 불가능
	// 명시적으로 타입캐스팅은 가능

	p = &myInteger;
	p = &myCharacter;

	std::cout << *((char*)p) << std::endl; // a
}

-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
